name: GitHub Classroom autograding and update moodle

on: 
  workflow_call:
    inputs:
      MOODLE:
        default: false
        required: false
        type: boolean
env:
  DEVOPS_DIR: devops
  GHSECRET: ${{ secrets.GITHUB_TOKEN }}

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  grading:
    # autograding an assignment in GitHub Classroom
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        # checkout the content of the repository
      - uses: ghwalin/autograder@master
        # run the test cases in .github/classroom/autograding.json
        id: autograding
      - name: grade-moodle-assignment
        # grade the assignment in Moodle, runs even after an error in autograding
        if: ${{ always() }} 
        run: |
          echo "${{ inputs.MOODLE }}"
          if [[ ! "${{ inputs.MOODLE }}" ]] 
          then
            exit 0
          fi
          grade=${{ steps.autograding.outputs.Points }}
          parts=(${grade//\// })
          points="points=${parts[0]}"
          maxpoints="max=${parts[1]}"
          messages='${{ steps.autograding.outputs.Messages }}'
          feedback="feedback=${messages//\"/\\\"}"
          user="user_name=${{ github.actor }}"
          
          repofull=${{ github.repository }}
          parts=(${repofull//\// })
          reponame=${parts[1]}
          template="${reponame/"-${{ github.actor }}"/""}"
          assignment="assignment_name=$template"
          token=${{secrets.MOODLE_TOKEN}}
          token=8690701b90958d43a590d3dee9f5dbc4
                    
          curl -k -X POST "${{ vars.MOODLE_URL}}?wstoken=$token&wsfunction=local_gradeassignments_update_grade" \
             -H "Content-Type: application/x-www-form-urlencoded" \
             --data "$assignment" \
             --data "$user" \
             --data "$points" \
             --data "$feedback" \
             --data "$maxpoints" \
             --data "repourl=${{ github.repository }}"
